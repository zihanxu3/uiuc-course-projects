$date
	Sun Feb 16 16:59:44 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module arith_machine_test $end
$var wire 1 ! except $end
$var reg 1 " clock $end
$var reg 1 # done $end
$var reg 1 $ reset $end
$var integer 32 % i [31:0] $end
$scope module am $end
$var wire 1 " clock $end
$var wire 1 $ reset $end
$var wire 32 & zext [31:0] $end
$var wire 1 ' writeenable $end
$var wire 5 ( wrNum [4:0] $end
$var wire 32 ) sext [31:0] $end
$var wire 5 * rtNum [4:0] $end
$var wire 32 + rtData [31:0] $end
$var wire 5 , rsNum [4:0] $end
$var wire 32 - rsData [31:0] $end
$var wire 1 . rd_src $end
$var wire 5 / rdNum [4:0] $end
$var wire 32 0 rdData [31:0] $end
$var wire 6 1 opcode [5:0] $end
$var wire 32 2 inst [31:0] $end
$var wire 17 3 imm16 [16:0] $end
$var wire 6 4 funct [5:0] $end
$var wire 1 ! except $end
$var wire 32 5 d [31:0] $end
$var wire 2 6 alu_src2 [1:0] $end
$var wire 3 7 alu_op [2:0] $end
$var wire 32 8 PC [31:0] $end
$var wire 32 9 B [31:0] $end
$scope module PC_reg $end
$var wire 1 " clock $end
$var wire 1 : enable $end
$var wire 1 $ reset $end
$var wire 32 ; d [31:0] $end
$var reg 32 < q [31:0] $end
$upscope $end
$scope module dec $end
$var wire 1 = add $end
$var wire 1 > addu $end
$var wire 1 ? and_ $end
$var wire 6 @ funct [5:0] $end
$var wire 1 A nor_ $end
$var wire 6 B opcode [5:0] $end
$var wire 1 C or_ $end
$var wire 1 . rd_src $end
$var wire 1 D sub $end
$var wire 1 E xor_ $end
$var wire 1 F xor_i $end
$var wire 1 ' writeenable $end
$var wire 1 G or_i $end
$var wire 1 ! except $end
$var wire 1 H and_i $end
$var wire 2 I alu_src2 [1:0] $end
$var wire 3 J alu_op [2:0] $end
$var wire 1 K addui $end
$var wire 1 L addi $end
$var wire 1 M I_type $end
$upscope $end
$scope module im $end
$var wire 30 N addr [29:0] $end
$var wire 32 O data [31:0] $end
$var reg 32 P i [31:0] $end
$upscope $end
$scope module m1 $end
$var wire 5 Q A [4:0] $end
$var wire 5 R B [4:0] $end
$var wire 5 S out [4:0] $end
$var wire 1 . sel $end
$var wire 5 T temp1 [4:0] $end
$var wire 5 U temp2 [4:0] $end
$upscope $end
$scope module malu $end
$var wire 3 V control [2:0] $end
$var wire 32 W inA [31:0] $end
$var wire 32 X inB [31:0] $end
$var wire 1 Y negative $end
$var wire 32 Z out [31:0] $end
$var wire 1 [ overflow $end
$var wire 1 \ zero $end
$upscope $end
$scope module mux3 $end
$var wire 32 ] B [31:0] $end
$var wire 32 ^ C [31:0] $end
$var wire 2 _ sel [1:0] $end
$var wire 32 ` wAB [31:0] $end
$var wire 32 a out [31:0] $end
$var wire 32 b A [31:0] $end
$scope module mAB $end
$var wire 32 c B [31:0] $end
$var wire 32 d out [31:0] $end
$var wire 1 e sel $end
$var wire 32 f temp1 [31:0] $end
$var wire 32 g temp2 [31:0] $end
$var wire 32 h A [31:0] $end
$upscope $end
$scope module mfinal $end
$var wire 32 i A [31:0] $end
$var wire 32 j B [31:0] $end
$var wire 32 k out [31:0] $end
$var wire 1 l sel $end
$var wire 32 m temp1 [31:0] $end
$var wire 32 n temp2 [31:0] $end
$upscope $end
$upscope $end
$scope module rf $end
$var wire 1 " clock $end
$var wire 5 o rdNum [4:0] $end
$var wire 1 ' rdWriteEnable $end
$var wire 1 $ reset $end
$var wire 32 p rsData [31:0] $end
$var wire 5 q rsNum [4:0] $end
$var wire 32 r rtData [31:0] $end
$var wire 5 s rtNum [4:0] $end
$var wire 32 t rdData [31:0] $end
$var integer 32 u i [31:0] $end
$upscope $end
$scope module talu $end
$var wire 3 v control [2:0] $end
$var wire 32 w inA [31:0] $end
$var wire 32 x inB [31:0] $end
$var wire 1 y negative $end
$var wire 32 z out [31:0] $end
$var wire 1 { overflow $end
$var wire 1 | zero $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 } \r[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ~ \r[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 !" \r[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 "" \r[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 #" \r[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 $" \r[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 %" \r[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 &" \r[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 '" \r[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 (" \r[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 )" \r[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 *" \r[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 +" \r[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ," \r[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 -" \r[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ." \r[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 /" \r[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 0" \r[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 1" \r[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 2" \r[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 3" \r[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 4" \r[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 5" \r[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 6" \r[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 7" \r[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 8" \r[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 9" \r[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 :" \r[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ;" \r[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 <" \r[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 =" \r[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 >" \r[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
0|
0{
b1100100 z
0y
b1100100 x
b0 w
b10 v
b100000 u
b1100100 t
b110 s
b0 r
b0 q
b0 p
b110 o
b0 n
b1100100 m
0l
b1100100 k
b1100100 j
b1100100 i
b0 h
b1100100 g
b0 f
1e
b1100100 d
b1100100 c
b0 b
b1100100 a
b1100100 `
b1 _
b1100100 ^
b1100100 ]
0\
0[
b100 Z
0Y
b100 X
b0 W
b10 V
b110 U
b0 T
b110 S
b110 R
b0 Q
b100000000 P
b100000000001100000000001100100 O
b0 N
1M
1L
0K
b10 J
b1 I
0H
0G
0F
0E
0D
0C
b1000 B
0A
b100100 @
0?
0>
0=
b0 <
b100 ;
1:
b1100100 9
b0 8
b10 7
b1 6
b100 5
b100100 4
b1100100 3
b100000000001100000000001100100 2
b1000 1
b1100100 0
b0 /
1.
b0 -
b0 ,
b0 +
b110 *
b1100100 )
b110 (
1'
b1100100 &
b100000 %
1$
0#
0"
0!
$end
#3
0$
#5
b10011011 9
b10011011 a
b10011011 k
b10011011 x
b10011011 m
b11111111 0
b11111111 t
b11111111 z
b10011011 `
b10011011 d
b10011011 i
b10011011 g
b111 (
b111 S
b111 o
b1000 5
b1000 ;
b1000 Z
b10011011 )
b10011011 ]
b10011011 c
b10011011 &
b10011011 ^
b10011011 j
b111 U
b10011011 3
b111 *
b111 R
b111 s
b1100100 -
b1100100 p
b1100100 w
b110 ,
b110 q
b11011 4
b11011 @
b100000110001110000000010011011 2
b100000110001110000000010011011 O
b1 N
b100 8
b100 <
b100 W
b1100100 %"
b0 +
b0 b
b0 h
b0 r
1"
#10
0"
#15
0|
b11001000 0
b11001000 t
b11001000 z
b1100100 9
b1100100 a
b1100100 k
b1100100 x
1'
0!
b1100100 m
b1100100 `
b1100100 d
b1100100 i
b1100100 f
b0 g
b1000 (
b1000 S
b1000 o
b10 7
b10 J
b10 v
0e
b1100 5
b1100 ;
b1100 Z
b100000000100000 )
b100000000100000 ]
b100000000100000 c
b100000000100000 &
b100000000100000 ^
b100000000100000 j
b1000 T
b0 U
1=
b0 6
b0 I
b0 _
b100000000100000 3
b1000 /
b1000 Q
b110 *
b110 R
b110 s
b100000 4
b100000 @
0.
0M
0L
b0 1
b0 B
b110001100100000000100000 2
b110001100100000000100000 O
b10 N
b11111111 &"
b1100100 +
b1100100 b
b1100100 h
b1100100 r
b1000 8
b1000 <
b1000 W
1"
#20
0"
#25
b11 7
b11 J
b11 v
b11001000 9
b11001000 a
b11001000 k
b11001000 x
b110111 0
b110111 t
b110111 z
b11001000 m
b1001 (
b1001 S
b1001 o
b11001000 `
b11001000 d
b11001000 i
b10000 5
b10000 ;
b10000 Z
b100100000100010 )
b100100000100010 ]
b100100000100010 c
b100100000100010 &
b100100000100010 ^
b100100000100010 j
b1001 T
b11001000 f
0=
1D
b100100000100010 3
b1001 /
b1001 Q
b11001000 +
b11001000 b
b11001000 h
b11001000 r
b1000 *
b1000 R
b1000 s
b11111111 -
b11111111 p
b11111111 w
b111 ,
b111 q
b100010 4
b100010 @
b111010000100100000100010 2
b111010000100100000100010 O
b11 N
b1100 8
b1100 <
b1100 W
b11001000 '"
1"
#30
0"
#35
1y
0|
b11111111 9
b11111111 a
b11111111 k
b11111111 x
b11111111 m
b1010 (
b1010 S
b1010 o
b11111111 `
b11111111 d
b11111111 i
b11111111111111111111111111001001 0
b11111111111111111111111111001001 t
b11111111111111111111111111001001 z
b10100 5
b10100 ;
b10100 Z
b101000000100010 )
b101000000100010 ]
b101000000100010 c
b101000000100010 &
b101000000100010 ^
b101000000100010 j
b1010 T
b11111111 f
b101000000100010 3
b1010 /
b1010 Q
b11111111 +
b11111111 b
b11111111 h
b11111111 r
b111 *
b111 R
b111 s
b11001000 -
b11001000 p
b11001000 w
b1000 ,
b1000 q
b1000001110101000000100010 2
b1000001110101000000100010 O
b100 N
b110111 ("
b10000 8
b10000 <
b10000 W
1"
#40
0"
#45
1'
0!
0|
0y
b100101100 0
b100101100 t
b100101100 z
b10 7
b10 J
b10 v
b1100100 9
b1100100 a
b1100100 k
b1100100 x
b1100100 m
b1011 (
b1011 S
b1011 o
b1100100 `
b1100100 d
b1100100 i
b11000 5
b11000 ;
b11000 Z
b101100000100000 )
b101100000100000 ]
b101100000100000 c
b101100000100000 &
b101100000100000 ^
b101100000100000 j
b1011 T
b1100100 f
1=
0D
b101100000100000 3
b1011 /
b1011 Q
b1100100 +
b1100100 b
b1100100 h
b1100100 r
b110 *
b110 R
b110 s
b100000 4
b100000 @
b1000001100101100000100000 2
b1000001100101100000100000 O
b101 N
b10100 8
b10100 <
b10100 W
b11111111111111111111111111001001 )"
1"
#50
0"
#55
0|
b100 7
b100 J
b100 v
b11111111 9
b11111111 a
b11111111 k
b11111111 x
b101100 0
b101100 t
b101100 z
b11111111 m
b1100 (
b1100 S
b1100 o
b11111111 `
b11111111 d
b11111111 i
b11100 5
b11100 ;
b11100 Z
b110000000100100 )
b110000000100100 ]
b110000000100100 c
b110000000100100 &
b110000000100100 ^
b110000000100100 j
b1100 T
b11111111 f
0=
1?
b110000000100100 3
b1100 /
b1100 Q
b11111111 +
b11111111 b
b11111111 h
b11111111 r
b111 *
b111 R
b111 s
b100101100 -
b100101100 p
b100101100 w
b1011 ,
b1011 q
b100100 4
b100100 @
b1011001110110000000100100 2
b1011001110110000000100100 O
b110 N
b100101100 *"
b11000 8
b11000 <
b11000 W
1"
#60
0"
#65
1y
b11111111111111111111111111111111 0
b11111111111111111111111111111111 t
b11111111111111111111111111111111 z
b101 7
b101 J
b101 v
b1101 (
b1101 S
b1101 o
b100000 5
b100000 ;
b100000 Z
b110100000100101 )
b110100000100101 ]
b110100000100101 c
b110100000100101 &
b110100000100101 ^
b110100000100101 j
b1101 T
0?
1C
b110100000100101 3
b1101 /
b1101 Q
b11111111111111111111111111001001 -
b11111111111111111111111111001001 p
b11111111111111111111111111001001 w
b1010 ,
b1010 q
b100101 4
b100101 @
b1010001110110100000100101 2
b1010001110110100000100101 O
b111 N
b11100 8
b11100 <
b11100 W
b101100 +"
1"
#70
0"
#75
0|
0y
b101010110101010 0
b101010110101010 t
b101010110101010 z
b101010101010101 9
b101010101010101 a
b101010101010101 k
b101010101010101 x
b0 m
b101010101010101 n
b0 `
b0 d
b0 i
b1110 (
b1110 S
b1110 o
1l
b100100 5
b100100 ;
b100100 Z
b101010101010101 )
b101010101010101 ]
b101010101010101 c
b101010101010101 &
b101010101010101 ^
b101010101010101 j
b0 f
b0 T
b1110 U
0C
b111 7
b111 J
b111 v
b10 6
b10 I
b10 _
b101010101010101 3
b1010 /
b1010 Q
b0 +
b0 b
b0 h
b0 r
b1110 *
b1110 R
b1110 s
b11111111 -
b11111111 p
b11111111 w
b111 ,
b111 q
b10101 4
b10101 @
1.
1M
1F
b1110 1
b1110 B
b111000111011100101010101010101 2
b111000111011100101010101010101 O
b1000 N
b11111111111111111111111111111111 ,"
b100000 8
b100000 <
b100000 W
1"
#80
0"
#85
b100000000 0
b100000000 t
b100000000 z
b11111111111111111111111111111111 9
b11111111111111111111111111111111 a
b11111111111111111111111111111111 k
b11111111111111111111111111111111 x
b11111111111111111111111111111111 m
b0 n
b1111 (
b1111 S
b1111 o
0l
b101000 5
b101000 ;
b101000 Z
b111100000100010 )
b111100000100010 ]
b111100000100010 c
b111100000100010 &
b111100000100010 ^
b111100000100010 j
b1111 T
b0 U
1D
1'
0!
b11 7
b11 J
b11 v
b0 6
b0 I
b0 _
b111100000100010 3
b1111 /
b1111 Q
b1101 *
b1101 R
b1101 s
b100010 4
b100010 @
0.
0M
0F
b0 1
b0 B
b111011010111100000100010 2
b111011010111100000100010 O
b11111111111111111111111111111111 `
b11111111111111111111111111111111 d
b11111111111111111111111111111111 i
b1001 N
b11111111111111111111111111111111 f
b100100 8
b100100 <
b100100 W
b101010110101010 -"
b11111111111111111111111111111111 +
b11111111111111111111111111111111 b
b11111111111111111111111111111111 h
b11111111111111111111111111111111 r
1"
#90
0"
#95
1'
0!
0|
b10 7
b10 J
b10 v
b10000 (
b10000 S
b10000 o
b1100011 0
b1100011 t
b1100011 z
b101100 5
b101100 ;
b101100 Z
b11111111111111101000000000100000 )
b11111111111111101000000000100000 ]
b11111111111111101000000000100000 c
b1000000000100000 &
b1000000000100000 ^
b1000000000100000 j
b10000 T
1=
0D
b1000000000100000 3
b10000 /
b10000 Q
b1100100 -
b1100100 p
b1100100 w
b110 ,
b110 q
b100000 4
b100000 @
b110011011000000000100000 2
b110011011000000000100000 O
b1010 N
b100000000 ."
b101000 8
b101000 <
b101000 W
1"
#100
0"
#105
1y
0|
b110 7
b110 J
b110 v
b11111111 9
b11111111 a
b11111111 k
b11111111 x
b11111111111111111111111000000000 0
b11111111111111111111111000000000 t
b11111111111111111111111000000000 z
b11111111 m
b10001 (
b10001 S
b10001 o
b11111111 `
b11111111 d
b11111111 i
b110000 5
b110000 ;
b110000 Z
b11111111111111101000100000100111 )
b11111111111111101000100000100111 ]
b11111111111111101000100000100111 c
b1000100000100111 &
b1000100000100111 ^
b1000100000100111 j
b10001 T
b11111111 f
0=
1A
b1000100000100111 3
b10001 /
b10001 Q
b11111111 +
b11111111 b
b11111111 h
b11111111 r
b111 *
b111 R
b111 s
b100000000 -
b100000000 p
b100000000 w
b1111 ,
b1111 q
b100111 4
b100111 @
b1111001111000100000100111 2
b1111001111000100000100111 O
b1011 N
b101100 8
b101100 <
b101100 W
b1100011 /"
1"
#110
0"
#115
1y
1'
0!
b11111111111111111111111100000000 0
b11111111111111111111111100000000 t
b11111111111111111111111100000000 z
b10 7
b10 J
b10 v
b100000000 9
b100000000 a
b100000000 k
b100000000 x
b100000000 m
b10010 (
b10010 S
b10010 o
b100000000 `
b100000000 d
b100000000 i
b110100 5
b110100 ;
b110100 Z
b11111111111111101001000000100000 )
b11111111111111101001000000100000 ]
b11111111111111101001000000100000 c
b1001000000100000 &
b1001000000100000 ^
b1001000000100000 j
b10010 T
b100000000 f
1=
0A
b1001000000100000 3
b10010 /
b10010 Q
b100000000 +
b100000000 b
b100000000 h
b100000000 r
b1111 *
b1111 R
b1111 s
b11111111111111111111111000000000 -
b11111111111111111111111000000000 p
b11111111111111111111111000000000 w
b10001 ,
b10001 q
b100000 4
b100000 @
b10001011111001000000100000 2
b10001011111001000000100000 O
b1100 N
b11111111111111111111111000000000 0"
b110000 8
b110000 <
b110000 W
1"
#120
0"
#125
0y
b0 7
b0 J
b0 v
b101100 9
b101100 a
b101100 k
b101100 x
b101011000 0
b101011000 t
b101011000 z
b101100 m
b10011 (
b10011 S
b10011 o
b101100 `
b101100 d
b101100 i
b111000 5
b111000 ;
b111000 Z
b11111111111111101001100000100001 )
b11111111111111101001100000100001 ]
b11111111111111101001100000100001 c
b1001100000100001 &
b1001100000100001 ^
b1001100000100001 j
b10011 T
b101100 f
0=
1>
b1001100000100001 3
b10011 /
b10011 Q
b101100 +
b101100 b
b101100 h
b101100 r
b1100 *
b1100 R
b1100 s
b100101100 -
b100101100 p
b100101100 w
b1011 ,
b1011 q
b100001 4
b100001 @
b1011011001001100000100001 2
b1011011001001100000100001 O
b1101 N
b110100 8
b110100 <
b110100 W
b11111111111111111111111100000000 1"
1"
#130
0"
#135
0|
b1010101010101010 9
b1010101010101010 a
b1010101010101010 k
b1010101010101010 x
b1010101010101010 n
b0 m
b1010101011111111 0
b1010101011111111 t
b1010101011111111 z
1l
b0 `
b0 d
b0 i
b10100 (
b10100 S
b10100 o
b101 7
b101 J
b101 v
b10 6
b10 I
b10 _
b111100 5
b111100 ;
b111100 Z
b11111111111111101010101010101010 )
b11111111111111101010101010101010 ]
b11111111111111101010101010101010 c
b1010101010101010 &
b1010101010101010 ^
b1010101010101010 j
b0 f
b0 T
b10100 U
0>
b1010101010101010 3
b10101 /
b10101 Q
b0 +
b0 b
b0 h
b0 r
b10100 *
b10100 R
b10100 s
b11111111 -
b11111111 p
b11111111 w
b111 ,
b111 q
b101010 4
b101010 @
1.
1M
1G
b1101 1
b1101 B
b110100111101001010101010101010 2
b110100111101001010101010101010 O
b1110 N
b101011000 2"
b111000 8
b111000 <
b111000 W
1"
#140
0"
#145
b11111110 0
b11111110 t
b11111110 z
b11111111 m
b11111111 9
b11111111 a
b11111111 k
b11111111 x
0l
b11111111 g
b0 n
b10101 (
b10101 S
b10101 o
1e
1'
0!
b0 7
b0 J
b0 v
b1000000 5
b1000000 ;
b1000000 Z
b11111111 )
b11111111 ]
b11111111 c
b11111111 &
b11111111 ^
b11111111 j
b10101 U
b1 6
b1 I
b1 _
b11111111 3
b0 /
b0 Q
b10101 *
b10101 R
b10101 s
b11111111111111111111111111111111 -
b11111111111111111111111111111111 p
b11111111111111111111111111111111 w
b1101 ,
b1101 q
b111111 4
b111111 @
1K
0G
b1001 1
b1001 B
b100101101101010000000011111111 2
b100101101101010000000011111111 O
b11111111 `
b11111111 d
b11111111 i
b1111 N
b0 f
b111100 8
b111100 <
b111100 W
b1010101011111111 3"
b0 +
b0 b
b0 h
b0 r
1"
#150
0"
#155
1|
b0 9
b0 a
b0 k
b0 x
b0 m
0'
1!
b0 `
b0 d
b0 i
b0 0
b0 t
b0 z
b0 g
b0 (
b0 S
b0 o
0e
b1000100 5
b1000100 ;
b1000100 Z
b0 )
b0 ]
b0 c
b0 &
b0 ^
b0 j
b0 U
b0 6
b0 I
b0 _
b0 3
b0 *
b0 R
b0 s
b0 -
b0 p
b0 w
b0 ,
b0 q
b0 4
b0 @
0.
0M
0K
b0 1
b0 B
b0 2
b0 O
b10000 N
b11111110 4"
b0 +
b0 b
b0 h
b0 r
b1000000 8
b1000000 <
b1000000 W
1"
#160
b100000 %
0"
